<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
	backgroundAlpha="1.0"
	currentState="{model.currentPlayerState}"
	rollOver="showPauseButton();"
	rollOut="hidePauseButton();"
	mouseWheel="changeZoomLevel(event);"
	mouseDown="setMousePosition(event);"
	mouseMove="dragDisplay(event);"
	mouseUp="setDisplayPos(event);"
	xmlns:view="org.opencast.engage.brick.videodisplay.view.*">
	<mx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import org.opencast.engage.brick.videodisplay.control.event.SetVolumeEvent;
			import org.opencast.engage.brick.videodisplay.state.PlayerState;
			import org.opencast.engage.brick.videodisplay.control.event.VideoControlEvent;
			import org.swizframework.Swiz;
			import org.opencast.engage.brick.videodisplay.model.VideodisplayModel;
			
		[Autowire]
		[Bindable]
		public var model:VideodisplayModel;
		
		private var dragStartPos: Point; 
		private var dispStartPos: Point; 
		private var draggingDisplay: Boolean = false;
		
			private function showPauseButton(): void {
				
				lblZoomLevel.visible = true;
				if (this.currentState == PlayerState.PLAYING)
					pauseButton_up.visible = true;
			
			}
			
			private function hidePauseButton(): void {
			
				lblZoomLevel.visible = false;
				if (this.currentState == PlayerState.PLAYING)
					pauseButton_up.visible = false;
			
			}
			
			private function changeZoomLevel( evt: MouseEvent ): void {
			
				// change zoomlevel; min 100%
				model.zoomLevel = model.zoomLevel + evt.delta < 100 ? 100 : model.zoomLevel + evt.delta;
			
			}
			
			private function setMousePosition(evt: MouseEvent): void {
			
				dragStartPos = new Point(evt.stageX, evt.stageY);
				dispStartPos = new Point(model.displayPositionX, model.displayPositionY);
				draggingDisplay = true;
				trace('blubb');
			
			}
			
			private function dragDisplay( evt: MouseEvent ): void {
			
				if (draggingDisplay) {
					//dragStartPos = new Point(evt.stageX, evt.stageY);
					model.displayPositionX = dispStartPos.x + evt.stageX - dragStartPos.x;
					model.displayPositionY = dispStartPos.y + evt.stageY - dragStartPos.y;
					trace(dragStartPos.x, evt.stageX, evt.stageX - dragStartPos.x);					
				}
			
			}
			
			private function setDisplayPos( evt: MouseEvent ): void {
			
				if (draggingDisplay) {
					model.displayPositionX = dispStartPos.x + evt.stageX - dragStartPos.x;
					model.displayPositionY = dispStartPos.y + evt.stageY - dragStartPos.y;
					draggingDisplay = false;
				}
			
			
			}
		]]>
	</mx:Script>
	<mx:states>
		<mx:State name="{PlayerState.PLAYING}">
			<mx:SetProperty target="{playButton_up}"
				name="visible"
				value="false"/>
			<mx:SetProperty target="{pauseButton_up}"
				name="visible"
				value="false"/>
		</mx:State>
		<mx:State name="{PlayerState.PAUSING}">
			<mx:SetProperty target="{playButton_up}"
				name="visible"
				value="true"/>
			<mx:SetProperty target="{pauseButton_up}"
				name="visible"
				value="false"/>
		</mx:State>
	</mx:states>
	<mx:transitions>
		<mx:Transition id="fadeOut"
			fromState="{PlayerState.PLAYING}"
			toState="{PlayerState.PAUSING}">
			<mx:Parallel target="{curtain}">
				<mx:Fade alphaFrom="0"
					alphaTo="1.0"
					duration="500"/>
			</mx:Parallel>
		</mx:Transition>
		<mx:Transition id="fadeIn"
			fromState="{PlayerState.PAUSING}"
			toState="{PlayerState.PLAYING}">
			<mx:Parallel target="{curtain}">
				<mx:Fade alphaFrom="1.0"
					alphaTo="0.0"
					duration="500"/>
			</mx:Parallel>
		</mx:Transition>
	</mx:transitions>
	<mx:Canvas id="curtain"
		backgroundColor="#000000"
		backgroundAlpha="0.5"
		width="100%"
		height="100%"
		x="0"
		y="0">
	</mx:Canvas>
	<mx:Button id="playButton_up"
		click="Swiz.dispatchEvent( new VideoControlEvent(VideoControlEvent.PLAY)); showPauseButton();"
		width="{ this.width / 12 }"
		height="{playButton_up.width}"
		styleName="Play"
		visible="false"
		right="{ this.width / 25 }"
		bottom="{ this.width / 50 }"
		buttonMode="true"/>
	<mx:Button id="pauseButton_up"
		click="Swiz.dispatchEvent( new VideoControlEvent(VideoControlEvent.PAUSE));"
		width="{ this.width / 12 }"
		height="{pauseButton_up.width}"
		styleName="Pause"
		visible="false"
		right="{ this.width / 25 }"
		bottom="{ this.width / 50 }"
		buttonMode="true" />
		
	<mx:NumberFormatter id="zoomNumFormat" />
	<mx:Label id="lblZoomLevel" 
		text="Zoom: {zoomNumFormat.format(model.zoomLevel)} %" 
		fontSize="{ this.width / 30 }"
		fontWeight="bold" 
		color="#FFFFFF"
		visible="false" />
</mx:Canvas>